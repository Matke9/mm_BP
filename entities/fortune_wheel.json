{
  "format_version": "1.20.80",
  "minecraft:entity": {
    "description": {
      "identifier": "mm:fortune_wheel",
      "is_spawnable": true,
      "is_summonable": true,
      "is_experimental": false,
      "properties": {
        //property that determines where the wheel will stop
        "mm:prize": {
          "type": "int",
          "range": [0, 5],
          "default": 1,
          "client_sync": true
        }
      },
      "scripts": {
        //variable that takes the value of mm:prize to be used in the animation
        "variables": {
          "variable.prize": "public",
          "client_sync": true
        },
        "initialize": ["variable.prize = 0;"],
        "on_update": ["variable.prize = query.property('mm:prize');"]
      }
    },
    "component_groups": {
      "mm:still": {
        "minecraft:variant": { "value": 0 }
      },
      "mm:spinning": {
        "minecraft:variant": { "value": 1 },
        "minecraft:timer": {
          //timer is used to return the entity to original state after the animation
          "time": 4,
          "looping": false,
          "time_down_event": {
            "event": "mm:stop_spinning",
            "target": "self"
          }
        }
      }
    },
    "components": {
      "minecraft:collision_box": {
        "width": 0.5,
        "height": 1
      },
      "minecraft:knockback_resistance": {
        "value": 1
      },
      "minecraft:pushable": {
        "is_pushable": false,
        "is_pushable_by_piston": false
      },
      "minecraft:persistent": {}
    },
    "events": {
      "mm:spin": {
        //we dont want to allow starting the spin if it is already spinning
        "filters": {
          "test": "is_variant",
          "operator": "!=",
          "value": 1
        },
        "remove": { "component_groups": ["mm:still"] },
        "add": { "component_groups": ["mm:spinning"] },
        "set_property": {
          "mm:prize": "math.floor(math.random(0, 4))"
        },
        "queue_command": {
          "command": ["playsound wheel.spin @a ~ ~ ~"]
        }
      },
      "mm:stop_spinning": {
        "sequence": [
          {
            "remove": { "component_groups": ["mm:spinning"] },
            "add": { "component_groups": ["mm:still"] },
            "queue_command": {
              "command": ["particle mm:wheel_spin ~ ~ ~"]
            }
          },
          {
            "trigger": {
              "event": "mm:reward0"
            }
          },
          {
            "trigger": {
              "event": "mm:reward1"
            }
          },
          {
            "trigger": {
              "event": "mm:reward2"
            }
          },
          {
            "trigger": {
              "event": "mm:reward3"
            }
          }
        ]
      },
      "mm:reward0": {
        "filters": {
          "test": "int_property",
          "domain": "mm:prize",
          "operator": "==",
          "value": 0
        },
        "queue_command": {
          "command": [
            "give @p redstone 1",
            "say @p redstone is usefull, i guess..."
          ]
        }
      },
      "mm:reward1": {
        "filters": {
          "test": "int_property",
          "domain": "mm:prize",
          "operator": "==",
          "value": 1
        },
        "queue_command": {
          "command": ["give @p diamond 1", "say @p JACKPOT, you got a diamond"]
        }
      },
      "mm:reward2": {
        "filters": {
          "test": "int_property",
          "domain": "mm:prize",
          "operator": "==",
          "value": 2
        },
        "queue_command": {
          "command": [
            "give @p gold_ingot 1",
            "say @p you got a gold ingot, that's not bad"
          ]
        }
      },
      "mm:reward3": {
        "filters": {
          "test": "int_property",
          "domain": "mm:prize",
          "operator": "==",
          "value": 3
        },
        "queue_command": {
          "command": [
            "give @p emerald 1",
            "say @p emerald, the villagers would like that one"
          ]
        }
      }
    }
  }
}
